/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.avventuratestuale_cheesywizards.chat;

import com.mycompany.avventuratestuale_cheesywizards.type.Users;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

/**
 *
 * @author nico0
 */
public class ClientFrame extends javax.swing.JFrame {
    
    private Users user = null;
    private PrintWriter out;
    private static final String SERVER_ADDRESS = "127.0.0.1"; // Indirizzo del server
    private static final int SERVER_PORT = 12345;
    
    /**
     * Creates new form ClientFrame
     */
    public ClientFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rispondi_button = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        inputArea = new javax.swing.JTextArea();
        send_button = new javax.swing.JButton();
        rispondi_button1 = new javax.swing.JButton();

        rispondi_button.setBackground(new java.awt.Color(0, 102, 153));
        rispondi_button.setText("RISPONDI");
        rispondi_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rispondi_buttonActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        messageArea.setBackground(new java.awt.Color(102, 102, 102));
        messageArea.setColumns(20);
        messageArea.setForeground(new java.awt.Color(0, 0, 0));
        messageArea.setRows(5);
        jScrollPane1.setViewportView(messageArea);

        inputArea.setBackground(new java.awt.Color(0, 0, 0));
        inputArea.setColumns(20);
        inputArea.setForeground(new java.awt.Color(255, 255, 255));
        inputArea.setRows(5);
        jScrollPane3.setViewportView(inputArea);

        send_button.setText("INVIA");
        send_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send_buttonActionPerformed(evt);
            }
        });

        rispondi_button1.setBackground(new java.awt.Color(0, 102, 153));
        rispondi_button1.setText("RISPONDI");
        rispondi_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rispondi_button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(send_button))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(212, Short.MAX_VALUE)
                .addComponent(rispondi_button1)
                .addGap(202, 202, 202))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rispondi_button1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(send_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rispondi_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rispondi_buttonActionPerformed

    }//GEN-LAST:event_rispondi_buttonActionPerformed

    private void rispondi_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rispondi_button1ActionPerformed
        String user_I_am = "nico02r@gmail.com";
        
        new Thread(() -> {
            try {
                System.out.println("Tentativo di connessione al server " + SERVER_ADDRESS + " sulla porta " + SERVER_PORT + "...");
                Socket socket = new Socket(SERVER_ADDRESS, SERVER_PORT);
                System.out.println("Connesso al server!");

                BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                out = new PrintWriter(socket.getOutputStream(), true);

                // Invio del nome del client al server
                out.println(user_I_am);

                String serverResponse;
                if ((serverResponse = in.readLine()) != null) {
                    System.out.println("Server: " + serverResponse);
                    messageArea.append("Server: " + serverResponse + "\n");
                    if (serverResponse.equals("Nome utente non autorizzato.")) {
                        System.out.println("Connessione chiusa dal server.");
                        socket.close();
                        return;
                    }
                }

                Thread readerThread = new Thread(() -> {
                    try {
                        String serverMessage;
                        while ((serverMessage = in.readLine()) != null) {
                            messageArea.append("Server: " + serverMessage + "\n");
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                });
                readerThread.start();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }).start();
    }//GEN-LAST:event_rispondi_button1ActionPerformed

    private void send_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send_buttonActionPerformed
        if (out != null) {
            out.println(inputArea.getText());
            messageArea.append("Client: " + inputArea.getText() + "\n");
            inputArea.setText("");
        }
    }//GEN-LAST:event_send_buttonActionPerformed

    /**
     * 
     */
    public void runClientFrame(Users user_info) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientFrame().setVisible(true);
                user = user_info;
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea inputArea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea messageArea;
    private javax.swing.JButton rispondi_button;
    private javax.swing.JButton rispondi_button1;
    private javax.swing.JButton send_button;
    // End of variables declaration//GEN-END:variables
}
